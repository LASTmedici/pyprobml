An error occurred while executing the following cell:
------------------
import os
import pandas as pd
from collections import OrderedDict
import matplotlib.pyplot as plt
import numpy as np

try:
    import torch
except ModuleNotFoundError:
    %pip install -qq torch
    import torch
import torch.nn as nn
import torch.nn.functional as F

try:
    import torchvision
except ModuleNotFoundError:
    %pip install -qq torchvision
    import torchvision
import torchvision.transforms as transforms

try:
    from pytorch_lightning import LightningDataModule, LightningModule, Trainer
except ModuleNotFoundError:
    %pip install -qq pytorch_lightning
    from pytorch_lightning import LightningDataModule, LightningModule, Trainer
from torch.utils.data import DataLoader, random_split

try:
    from vae_celeba_lightning import VAE
except ModuleNotFoundError:
    %pip install -qq vae_celeba_lightning
    from vae_celeba_lightning import VAE
try:
    from einops import rearrange
except ModuleNotFoundError:
    %pip install -qq einops
    from einops import rearrange
from torchvision.utils import make_grid

try:
    from tqdm import tqdm
except ModuleNotFoundError:
    %pip install -qq tqdm
    from tqdm import tqdm
try:
    from lvm_plots_utils import get_random_samples, get_grid_samples, plot_scatter_plot, get_imrange, make_imrange
except ModuleNotFoundError:
    %pip install -qq lvm_plots_utils
    from lvm_plots_utils import get_random_samples, get_grid_samples, plot_scatter_plot, get_imrange, make_imrange
------------------

---------------------------------------------------------------------------
OSError                                   Traceback (most recent call last)
/tmp/ipykernel_4137/2329549897.py in <module>
     45     from tqdm import tqdm
     46 try:
---> 47     from lvm_plots_utils import get_random_samples, get_grid_samples, plot_scatter_plot, get_imrange, make_imrange
     48 except ModuleNotFoundError:
     49     get_ipython().run_line_magic('pip', 'install -qq lvm_plots_utils')

/__w/pyprobml/pyprobml/lvm_plots_utils.py in <module>
----> 1 import umap
      2 from typing import Callable, Tuple
      3 import torch
      4 import numpy as np
      5 import matplotlib

~/miniconda3/envs/py37/lib/python3.7/site-packages/umap/__init__.py in <module>
      5     with catch_warnings():
      6         simplefilter("ignore")
----> 7         from .parametric_umap import ParametricUMAP
      8 except ImportError:
      9     warn(

~/miniconda3/envs/py37/lib/python3.7/site-packages/umap/parametric_umap.py in <module>
     12 
     13 try:
---> 14     import tensorflow as tf
     15 except ImportError:
     16     warn(

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/__init__.py in <module>
     35 import typing as _typing
     36 
---> 37 from tensorflow.python.tools import module_util as _module_util
     38 from tensorflow.python.util.lazy_loader import LazyLoader as _LazyLoader
     39 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/python/__init__.py in <module>
     34 # pylint: disable=wildcard-import,g-bad-import-order,g-import-not-at-top
     35 
---> 36 from tensorflow.python import pywrap_tensorflow as _pywrap_tensorflow
     37 from tensorflow.python.eager import context
     38 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>
     24 
     25 # Perform pre-load sanity checks in order to produce a more actionable error.
---> 26 self_check.preload_check()
     27 
     28 # pylint: disable=wildcard-import,g-import-not-at-top,unused-import,line-too-long

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/python/platform/self_check.py in preload_check()
     63     cpu_feature_guard_library = os.path.join(
     64         os.path.dirname(__file__), "../../core/platform/_cpu_feature_guard.so")
---> 65     ctypes.CDLL(cpu_feature_guard_library)

~/miniconda3/envs/py37/lib/python3.7/ctypes/__init__.py in __init__(self, name, mode, handle, use_errno, use_last_error)
    362 
    363         if handle is None:
--> 364             self._handle = _dlopen(self._name, mode)
    365         else:
    366             self._handle = handle

OSError: /github/home/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/python/platform/../../core/platform/_cpu_feature_guard.so: cannot open shared object file: No such file or directory
OSError: /github/home/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/python/platform/../../core/platform/_cpu_feature_guard.so: cannot open shared object file: No such file or directory
