An error occurred while executing the following cell:
------------------
import jax
import jax.numpy as jnp

try:
    import numpyro
except ModuleNotFoundError:
    %pip install -qq numpyro
    import numpyro
import numpyro.distributions as dist

try:
    from tinygp import kernels, GaussianProcess
except ModuleNotFoundError:
    %pip install -qq tinygp
    from tinygp import kernels, GaussianProcess

# We'll enable float64 support here for better numerical performance
from jax.config import config

config.update("jax_enable_x64", True)


def model(x, y=None):
    # The parameters of the GP model
    mean = numpyro.sample("mean", dist.Normal(0.0, 2.0))
    sigma = numpyro.sample("sigma", dist.HalfNormal(3.0))
    rho = numpyro.sample("rho", dist.HalfNormal(10.0))

    # Set up the kernel and GP objects
    kernel = sigma**2 * kernels.Matern52(rho)
    gp = GaussianProcess(kernel, x, diag=1e-5, mean=mean)

    # This parameter has shape (num_data,) and it encodes our beliefs about
    # the process rate in each bin
    log_rate = numpyro.sample("log_rate", gp.numpyro_dist())

    # Finally, our observation model is Poisson
    numpyro.sample("obs", dist.Poisson(jnp.exp(log_rate)), obs=y)


# Run the MCMC
nuts_kernel = numpyro.infer.NUTS(model, target_accept_prob=0.9)
mcmc = numpyro.infer.MCMC(
    nuts_kernel,
    num_warmup=500,
    num_samples=500,
    num_chains=2,
    progress_bar=False,
)
rng_key = jax.random.PRNGKey(55873)
mcmc.run(rng_key, x, y=y)
samples = mcmc.get_samples()
------------------

---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
/tmp/ipykernel_3680/2652553149.py in <module>
      3 
      4 try:
----> 5     import numpyro
      6 except ModuleNotFoundError:
      7     get_ipython().run_line_magic('pip', 'install -qq numpyro')

~/miniconda3/envs/py37/lib/python3.7/site-packages/numpyro/__init__.py in <module>
      4 import logging
      5 
----> 6 from numpyro import compat, diagnostics, distributions, handlers, infer, optim
      7 from numpyro.contrib.render import render_model
      8 from numpyro.distributions.distribution import enable_validation, validation_enabled

~/miniconda3/envs/py37/lib/python3.7/site-packages/numpyro/distributions/__init__.py in <module>
      2 # SPDX-License-Identifier: Apache-2.0
      3 
----> 4 from numpyro.distributions.conjugate import (
      5     BetaBinomial,
      6     DirichletMultinomial,

~/miniconda3/envs/py37/lib/python3.7/site-packages/numpyro/distributions/conjugate.py in <module>
      8 from numpyro.distributions import constraints
      9 from numpyro.distributions.continuous import Beta, Dirichlet, Gamma
---> 10 from numpyro.distributions.discrete import (
     11     BinomialProbs,
     12     MultinomialProbs,

~/miniconda3/envs/py37/lib/python3.7/site-packages/numpyro/distributions/discrete.py in <module>
     34 from jax.nn import softmax, softplus
     35 import jax.numpy as jnp
---> 36 from jax.ops import index_add
     37 import jax.random as random
     38 from jax.scipy.special import expit, gammaincc, gammaln, logsumexp, xlog1py, xlogy

ImportError: cannot import name 'index_add' from 'jax.ops' (/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/jax/ops/__init__.py)
ImportError: cannot import name 'index_add' from 'jax.ops' (/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/jax/ops/__init__.py)
