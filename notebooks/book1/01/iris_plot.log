An error occurred while executing the following cell:
------------------

import numpy as np
import matplotlib.pyplot as plt
import os
try:
    import probml_utils as pml
except ModuleNotFoundError:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    import probml_utils as pml
import seaborn as sns;
sns.set(style="ticks", color_codes=True)

try:
    import pandas as pd
except ModuleNotFoundError:
    %pip install -qq pandas
    import pandas as pd
pd.set_option('display.precision', 2) # 2 decimal places
pd.set_option('display.max_rows', 20)
pd.set_option('display.max_columns', 30)
pd.set_option('display.width', 100) # wide windows

try:
    import sklearn
except ModuleNotFoundError:
    %pip install -qq scikit-learn
    import sklearn
from sklearn.datasets import load_iris
iris = load_iris()

# Extract numpy arrays
X = iris.data 
y = iris.target

# Convert to pandas dataframe 
df = pd.DataFrame(data=X, columns=iris.feature_names)
df['label'] = pd.Series(iris.target_names[y], dtype='category')

# we pick a color map to match that used by decision tree graphviz 
#cmap = ListedColormap(['#fafab0','#a0faa0', '#9898ff']) # orange, green, blue/purple
#cmap = ListedColormap(['orange', 'green', 'purple']) 
palette = {'setosa': 'orange', 'versicolor': 'green', 'virginica': 'purple'}

g = sns.pairplot(df, vars = df.columns[0:4], hue="label", palette=palette)
#g = sns.pairplot(df, vars = df.columns[0:4], hue="label")
pml.savefig('iris_scatterplot_purple.pdf')
plt.show()


# Change colum names
iris_df = df.copy()
iris_df.columns =  ['sl', 'sw', 'pl', 'pw'] + ['label'] 

g = sns.pairplot(iris_df, vars = iris_df.columns[0:4], hue="label")
plt.tight_layout()
pml.savefig('iris_pairplot.pdf')
plt.show()


sns.stripplot(x="label", y="sl", data=iris_df, jitter=True)
pml.savefig('iris_sepal_length_strip_plot.pdf')
plt.show()

------------------

---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/tmp/ipykernel_25709/4238276254.py in <module>
     51 iris_df.columns =  ['sl', 'sw', 'pl', 'pw'] + ['label']
     52 
---> 53 g = sns.pairplot(iris_df, vars = iris_df.columns[0:4], hue="label")
     54 plt.tight_layout()
     55 pml.savefig('iris_pairplot.pdf')

~/miniconda3/envs/py37/lib/python3.7/site-packages/seaborn/_decorators.py in inner_f(*args, **kwargs)
     44             )
     45         kwargs.update({k: arg for k, arg in zip(sig.parameters, args)})
---> 46         return f(**kwargs)
     47     return inner_f
     48 

~/miniconda3/envs/py37/lib/python3.7/site-packages/seaborn/axisgrid.py in pairplot(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size)
   2096     grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,
   2097                     hue_order=hue_order, palette=palette, corner=corner,
-> 2098                     height=height, aspect=aspect, dropna=dropna, **grid_kws)
   2099 
   2100     # Add the markers here as PairGrid has figured out how many levels of the

~/miniconda3/envs/py37/lib/python3.7/site-packages/seaborn/_decorators.py in inner_f(*args, **kwargs)
     44             )
     45         kwargs.update({k: arg for k, arg in zip(sig.parameters, args)})
---> 46         return f(**kwargs)
     47     return inner_f
     48 

~/miniconda3/envs/py37/lib/python3.7/site-packages/seaborn/axisgrid.py in __init__(self, data, hue, hue_order, palette, hue_kws, vars, x_vars, y_vars, corner, diag_sharey, height, aspect, layout_pad, despine, dropna, size)
   1240         # Disable autolayout so legend_out works
   1241         with mpl.rc_context({"figure.autolayout": False}):
-> 1242             fig = plt.figure(figsize=figsize)
   1243 
   1244         axes = fig.subplots(len(y_vars), len(x_vars),

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/pyplot.py in figure(num, figsize, dpi, facecolor, edgecolor, frameon, FigureClass, clear, **kwargs)
    808             facecolor=facecolor, edgecolor=edgecolor, frameon=frameon,
    809             FigureClass=FigureClass, **kwargs)
--> 810         fig = manager.canvas.figure
    811         if fig_label:
    812             fig.set_label(fig_label)

AttributeError: 'NoneType' object has no attribute 'canvas'
AttributeError: 'NoneType' object has no attribute 'canvas'
