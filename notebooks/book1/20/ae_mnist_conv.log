An error occurred while executing the following cell:
------------------
import matplotlib
import matplotlib.pyplot as plt
import numpy as np

try:
    import torch
except ModuleNotFoundError:
    %pip install -qq torch
    import torch
import torch.nn as nn

try:
    from torchvision.datasets import MNIST
except ModuleNotFoundError:
    %pip install -qq torchvision
    from torchvision.datasets import MNIST
import torch.nn.functional as F
import torchvision.transforms as transforms
from torch.utils.data import DataLoader

try:
    from pytorch_lightning import LightningModule, Trainer
except ModuleNotFoundError:
    %pip install -qq pytorch_lightning
    from pytorch_lightning import LightningModule, Trainer
try:
    from einops import rearrange
except ModuleNotFoundError:
    %pip install -qq einops
    from einops import rearrange
import seaborn as sns

try:
    from probml_utils import savefig
except ModuleNotFoundError:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    from probml_utils import savefig
try:
    from probml_utils.lvm_plots_utils import (
        get_random_samples,
        get_grid_samples,
        plot_scatter_plot,
        get_imrange,
        plot_grid_plot,
    )
except:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    from probml_utils.lvm_plots_utils import (
        get_random_samples,
        get_grid_samples,
        plot_scatter_plot,
        get_imrange,
        plot_grid_plot,
    )

from torchvision.utils import make_grid
from pytorch_lightning.utilities.seed import seed_everything

try:
    from probml_utils.ae_mnist_conv import (
        ConvAEModule,
        ConvAE,
    )
except:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    from probml_utils.ae_mnist_conv import (
        ConvAEModule,
        ConvAE,
    )
------------------

---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
/tmp/ipykernel_3648/4080974842.py in <module>
     21 try:
---> 22     from pytorch_lightning import LightningModule, Trainer
     23 except ModuleNotFoundError:

ModuleNotFoundError: No module named 'pytorch_lightning'

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
/tmp/ipykernel_3648/4080974842.py in <module>
     23 except ModuleNotFoundError:
     24     get_ipython().run_line_magic('pip', 'install -qq pytorch_lightning')
---> 25     from pytorch_lightning import LightningModule, Trainer
     26 try:
     27     from einops import rearrange

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/__init__.py in <module>
     28     _logger.propagate = False
     29 
---> 30 from pytorch_lightning.callbacks import Callback  # noqa: E402
     31 from pytorch_lightning.core import LightningDataModule, LightningModule  # noqa: E402
     32 from pytorch_lightning.trainer import Trainer  # noqa: E402

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/callbacks/__init__.py in <module>
     24 from pytorch_lightning.callbacks.prediction_writer import BasePredictionWriter
     25 from pytorch_lightning.callbacks.progress import ProgressBar, ProgressBarBase, RichProgressBar, TQDMProgressBar
---> 26 from pytorch_lightning.callbacks.pruning import ModelPruning
     27 from pytorch_lightning.callbacks.quantization import QuantizationAwareTraining
     28 from pytorch_lightning.callbacks.rich_model_summary import RichModelSummary

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/callbacks/pruning.py in <module>
     29 import pytorch_lightning as pl
     30 from pytorch_lightning.callbacks.base import Callback
---> 31 from pytorch_lightning.core.lightning import LightningModule
     32 from pytorch_lightning.utilities.apply_func import apply_to_collection
     33 from pytorch_lightning.utilities.exceptions import MisconfigurationException

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/core/__init__.py in <module>
     14 
     15 from pytorch_lightning.core.datamodule import LightningDataModule
---> 16 from pytorch_lightning.core.lightning import LightningModule
     17 
     18 __all__ = ["LightningDataModule", "LightningModule"]

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/core/lightning.py in <module>
     38 from pytorch_lightning.core.optimizer import LightningOptimizer
     39 from pytorch_lightning.core.saving import ModelIO
---> 40 from pytorch_lightning.loggers import LightningLoggerBase, LoggerCollection
     41 from pytorch_lightning.trainer.connectors.data_connector import _DataHookSelector
     42 from pytorch_lightning.trainer.connectors.logger_connector.fx_validator import _FxValidator

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/loggers/__init__.py in <module>
     16 from pytorch_lightning.loggers.base import LightningLoggerBase, LoggerCollection
     17 from pytorch_lightning.loggers.csv_logs import CSVLogger
---> 18 from pytorch_lightning.loggers.tensorboard import TensorBoardLogger
     19 
     20 __all__ = ["LightningLoggerBase", "LoggerCollection", "TensorBoardLogger", "CSVLogger"]

~/miniconda3/envs/py37/lib/python3.7/site-packages/pytorch_lightning/loggers/tensorboard.py in <module>
     24 import numpy as np
     25 import torch
---> 26 from torch.utils.tensorboard import SummaryWriter
     27 from torch.utils.tensorboard.summary import hparams
     28 

~/miniconda3/envs/py37/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py in <module>
      8 del tensorboard
      9 
---> 10 from .writer import FileWriter, SummaryWriter  # noqa: F401
     11 from tensorboard.summary.writer.record_writer import RecordWriter  # noqa: F401

~/miniconda3/envs/py37/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py in <module>
      7 
      8 from tensorboard.compat import tf
----> 9 from tensorboard.compat.proto.event_pb2 import SessionLog
     10 from tensorboard.compat.proto.event_pb2 import Event
     11 from tensorboard.compat.proto import event_pb2

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorboard/compat/proto/event_pb2.py in <module>
     15 
     16 
---> 17 from tensorboard.compat.proto import summary_pb2 as tensorboard_dot_compat_dot_proto_dot_summary__pb2
     18 
     19 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorboard/compat/proto/summary_pb2.py in <module>
     15 
     16 
---> 17 from tensorboard.compat.proto import tensor_pb2 as tensorboard_dot_compat_dot_proto_dot_tensor__pb2
     18 
     19 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorboard/compat/proto/tensor_pb2.py in <module>
     14 
     15 
---> 16 from tensorboard.compat.proto import resource_handle_pb2 as tensorboard_dot_compat_dot_proto_dot_resource__handle__pb2
     17 from tensorboard.compat.proto import tensor_shape_pb2 as tensorboard_dot_compat_dot_proto_dot_tensor__shape__pb2
     18 from tensorboard.compat.proto import types_pb2 as tensorboard_dot_compat_dot_proto_dot_types__pb2

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorboard/compat/proto/resource_handle_pb2.py in <module>
     14 
     15 
---> 16 from tensorboard.compat.proto import tensor_shape_pb2 as tensorboard_dot_compat_dot_proto_dot_tensor__shape__pb2
     17 from tensorboard.compat.proto import types_pb2 as tensorboard_dot_compat_dot_proto_dot_types__pb2
     18 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorboard/compat/proto/tensor_shape_pb2.py in <module>
     40       message_type=None, enum_type=None, containing_type=None,
     41       is_extension=False, extension_scope=None,
---> 42       serialized_options=None, file=DESCRIPTOR),
     43     _descriptor.FieldDescriptor(
     44       name='name', full_name='tensorboard.TensorShapeProto.Dim.name', index=1,

~/miniconda3/envs/py37/lib/python3.7/site-packages/google/protobuf/descriptor.py in __new__(cls, name, full_name, index, number, type, cpp_type, label, default_value, message_type, enum_type, containing_type, is_extension, extension_scope, options, serialized_options, has_default_value, containing_oneof, json_name, file, create_key)
    558                 has_default_value=True, containing_oneof=None, json_name=None,
    559                 file=None, create_key=None):  # pylint: disable=redefined-builtin
--> 560       _message.Message._CheckCalledFromGeneratedFile()
    561       if is_extension:
    562         return _message.default_pool.FindExtensionByName(full_name)

TypeError: Descriptors cannot not be created directly.
If this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc >= 3.19.0.
If you cannot immediately regenerate your protos, some other possible workarounds are:
 1. Downgrade the protobuf package to 3.20.x or lower.
 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).

More information: https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates
TypeError: Descriptors cannot not be created directly.
If this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc >= 3.19.0.
If you cannot immediately regenerate your protos, some other possible workarounds are:
 1. Downgrade the protobuf package to 3.20.x or lower.
 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).

More information: https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates
