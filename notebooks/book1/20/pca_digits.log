An error occurred while executing the following cell:
------------------
# PCA in 2d on digit images.
# Based on fig 14.23 of  of "Elements of statistical learning". Code is from Andrey Gaskov's site:

# Code modified from
# https://github.com/empathy87/The-Elements-of-Statistical-Learning-Python-Notebooks/blob/master/examples/ZIP%20Code.ipynb


try:
    import pandas as pd
except ModuleNotFoundError:
    %pip install -qq pandas
    import pandas as pd
from matplotlib import transforms, pyplot as plt
import numpy as np

try:
    from sklearn.decomposition import PCA
except ModuleNotFoundError:
    %pip install -qq scikit-learn
    from sklearn.decomposition import PCA
from sklearn import datasets
import requests
from io import BytesIO

try:
    import probml_utils as pml
except ModuleNotFoundError:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    import probml_utils as pml

try:
    from tensorflow import keras
except ModuleNotFoundError:
    %pip install -qq tensorflow
    from tensorflow import keras
import tensorflow as tf

# define plots common properties and color constants
plt.rcParams["font.family"] = "Arial"
plt.rcParams["axes.linewidth"] = 0.5
GRAY1, GRAY4, GRAY7 = "#231F20", "#646369", "#929497"

if 1:
    mnist = keras.datasets.mnist
    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()
    train_images = train_images / 255.0
    test_images = test_images / 255.0
    ndx = np.arange(1000)
    nsamples, nrows, ncols = train_images.shape
    X_train = np.reshape(train_images, (nsamples, nrows * ncols))
    X_train = X_train[ndx, :]
    y_train = train_labels[ndx]
    w = 30  # 28+2

if 0:
    digits = datasets.load_digits()
    X_train = digits.data
    y_train = digits.target  # 0..9
    w = 10  # pixels for one digit, 8+2


if 0:
    # load numpy array from the compressed file
    url = "https://github.com/probml/probml-data/blob/main/data/goog.npy?raw=true"
    response = requests.get(url)
    rawdata = BytesIO(response.content)
    arr = np.load(rawdata)["arr_0"]  #'../data/zip.npy.npz'
    # do train-test split by the last column
    train, test = arr[arr[:, -1] == 0], arr[arr[:, -1] == 1]
    X_train, X_test = train[:, 1:-1], test[:, 1:-1]
    y_train, y_test = train[:, 0].astype(int), test[:, 0].astype(int)
    w = 20  # pixels for one digit, 16+4


n_samples, n_features = X_train.shape
print(X_train.shape)
img_size = int(np.sqrt(n_features))


# idx_3 = np.where(y_train == 3)[0]
idx_3 = np.where(y_train == 9)[0]
X_train_3 = X_train[idx_3]


X_train_3_pca = PCA(n_components=2).fit_transform(X_train_3)
x_grid = np.percentile(X_train_3_pca[:, 0], [5, 25, 50, 75, 95])
y_grid = np.percentile(X_train_3_pca[:, 1], [5, 25, 50, 75, 95])
x_grid[2], y_grid[2] = 0, 0


fig, axarr = plt.subplots(1, 2, figsize=(6.7, 3.8), dpi=150, gridspec_kw=dict(width_ratios=[3, 2]))
plt.subplots_adjust(wspace=0.1)
for s in axarr[1].spines.values():
    s.set_visible(False)
axarr[1].tick_params(bottom=False, labelbottom=False, left=False, labelleft=False)
ax = axarr[0]
ax.scatter(X_train_3_pca[:, 0], X_train_3_pca[:, 1], s=1, color="#02A4A3")
ax.set_xlabel("First Principal Component", color=GRAY4, fontsize=8)
ax.set_ylabel("Second Principal Component", color=GRAY4, fontsize=8)
for i in ax.get_yticklabels() + ax.get_xticklabels():
    i.set_fontsize(7)
ax.axhline(0, linewidth=0.5, color=GRAY1)
ax.axvline(0, linewidth=0.5, color=GRAY1)
for i in range(5):
    if i != 2:
        ax.axhline(y_grid[i], linewidth=0.5, color=GRAY4, linestyle="--")
        ax.axvline(x_grid[i], linewidth=0.5, color=GRAY4, linestyle="--")

img = np.ones(shape=(4 + w * 5, 4 + w * 5))
for i in range(5):
    for j in range(5):
        v = X_train_3_pca - np.array([x_grid[i], y_grid[j]])
        v = np.sqrt(np.sum(v**2, axis=-1))
        idx = np.argmin(v)
        ax.scatter(
            X_train_3_pca[idx : idx + 1, 0],
            X_train_3_pca[idx : idx + 1, 1],
            s=14,
            facecolors="none",
            edgecolors="r",
            linewidth=1,
        )
        img[j * w + 4 : j * w + 4 + img_size, i * w + 4 : i * w + 4 + img_size] = -X_train_3[idx].reshape(
            (img_size, img_size)
        )

ax = axarr[1]
ax.imshow(img, cmap="gray")
ax.set_aspect("equal", "datalim")
plt.tight_layout()
pml.savefig("pca_digits.pdf")
plt.show()
------------------

---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
/tmp/ipykernel_4628/3439636957.py in <module>
     31 try:
---> 32     from tensorflow import keras
     33 except ModuleNotFoundError:

ModuleNotFoundError: No module named 'tensorflow'

During handling of the above exception, another exception occurred:

RuntimeError                              Traceback (most recent call last)
/tmp/ipykernel_4628/3439636957.py in <module>
     33 except ModuleNotFoundError:
     34     get_ipython().run_line_magic('pip', 'install -qq tensorflow')
---> 35     from tensorflow import keras
     36 import tensorflow as tf
     37 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/__init__.py in <module>
     49 from ._api.v2 import autograph
     50 from ._api.v2 import bitwise
---> 51 from ._api.v2 import compat
     52 from ._api.v2 import config
     53 from ._api.v2 import data

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/__init__.py in <module>
     35 import sys as _sys
     36 
---> 37 from . import v1
     38 from . import v2
     39 from tensorflow.python.compat.compat import forward_compatibility_horizon

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/__init__.py in <module>
     28 from . import autograph
     29 from . import bitwise
---> 30 from . import compat
     31 from . import config
     32 from . import data

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/compat/__init__.py in <module>
     35 import sys as _sys
     36 
---> 37 from . import v1
     38 from . import v2
     39 from tensorflow.python.compat.compat import forward_compatibility_horizon

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/compat/v1/__init__.py in <module>
     45 from tensorflow._api.v2.compat.v1 import layers
     46 from tensorflow._api.v2.compat.v1 import linalg
---> 47 from tensorflow._api.v2.compat.v1 import lite
     48 from tensorflow._api.v2.compat.v1 import logging
     49 from tensorflow._api.v2.compat.v1 import lookup

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/lite/__init__.py in <module>
      7 
      8 from . import constants
----> 9 from . import experimental
     10 from tensorflow.lite.python.lite import Interpreter
     11 from tensorflow.lite.python.lite import OpHint

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/lite/experimental/__init__.py in <module>
      6 import sys as _sys
      7 
----> 8 from . import authoring
      9 from tensorflow.lite.python.analyzer import ModelAnalyzer as Analyzer
     10 from tensorflow.lite.python.lite import OpResolverType

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/_api/v2/compat/v1/lite/experimental/authoring/__init__.py in <module>
      6 import sys as _sys
      7 
----> 8 from tensorflow.lite.python.authoring.authoring import compatible

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/lite/python/authoring/authoring.py in <module>
     41 
     42 # pylint: disable=g-import-not-at-top
---> 43 from tensorflow.lite.python import convert
     44 from tensorflow.lite.python import lite
     45 from tensorflow.lite.python.metrics import converter_error_data_pb2

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in <module>
     26 
     27 from tensorflow.lite.python import lite_constants
---> 28 from tensorflow.lite.python import util
     29 from tensorflow.lite.python import wrap_toco
     30 from tensorflow.lite.python.convert_phase import Component

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow/lite/python/util.py in <module>
     53 # pylint: disable=unused-import
     54 try:
---> 55   from jax import xla_computation as _xla_computation
     56 except ImportError:
     57   _xla_computation = None

~/miniconda3/envs/py37/lib/python3.7/site-packages/jax/__init__.py in <module>
     33 # We want the exported object to be the class, so we first import the module
     34 # to make sure a later import doesn't overwrite the class.
---> 35 from jax import config as _config_module
     36 del _config_module
     37 

~/miniconda3/envs/py37/lib/python3.7/site-packages/jax/config.py in <module>
     15 # TODO(phawkins): fix users of this alias and delete this file.
     16 
---> 17 from jax._src.config import config

~/miniconda3/envs/py37/lib/python3.7/site-packages/jax/_src/config.py in <module>
     27 from absl import logging
     28 
---> 29 from jax._src import lib
     30 from jax._src.lib import jax_jit
     31 from jax._src.lib import transfer_guard_lib

~/miniconda3/envs/py37/lib/python3.7/site-packages/jax/_src/lib/__init__.py in <module>
     95   jax_version=jax.version.__version__,
     96   jaxlib_version=jaxlib.version.__version__,
---> 97   minimum_jaxlib_version=jax.version._minimum_jaxlib_version)
     98 
     99 

~/miniconda3/envs/py37/lib/python3.7/site-packages/jax/_src/lib/__init__.py in check_jaxlib_version(jax_version, jaxlib_version, minimum_jaxlib_version)
     87            f'incompatible with jax version {jax_version}. Please '
     88            'update your jax and/or jaxlib packages.')
---> 89     raise RuntimeError(msg)
     90 
     91   return _jaxlib_version

RuntimeError: jaxlib version 0.3.15 is newer than and incompatible with jax version 0.3.14. Please update your jax and/or jaxlib packages.
RuntimeError: jaxlib version 0.3.15 is newer than and incompatible with jax version 0.3.14. Please update your jax and/or jaxlib packages.
