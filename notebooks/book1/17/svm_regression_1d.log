An error occurred while executing the following cell:
------------------
# SVM for regression in 1d
# Code is based on
# https://github.com/ageron/handson-ml2/blob/master/05_support_vector_machines.ipynb


import numpy as np
import matplotlib.pyplot as plt

try:
    from sklearn.pipeline import Pipeline
except ModuleNotFoundError:
    %pip install -qq scikit-learn
    from sklearn.pipeline import Pipeline
from sklearn.preprocessing import PolynomialFeatures
from sklearn.preprocessing import StandardScaler

from sklearn.svm import LinearSVR
from sklearn.svm import SVR


def plot_svm_regression(svm_reg, X, y, axes):
    x1s = np.linspace(axes[0], axes[1], 100).reshape(100, 1)
    y_pred = svm_reg.predict(x1s)
    plt.plot(x1s, y_pred, "k-", linewidth=2, label=r"$\hat{y}$")
    plt.plot(x1s, y_pred + svm_reg.epsilon, "k--")
    plt.plot(x1s, y_pred - svm_reg.epsilon, "k--")
    plt.scatter(X[svm_reg.support_], y[svm_reg.support_], s=180, facecolors="#FFAAAA")
    plt.plot(X, y, "bo")
    plt.xlabel(r"$x_1$", fontsize=18)
    # plt.legend(loc="upper left", fontsize=18)
    plt.axis(axes)


np.random.seed(42)
m = 100
X = 2 * np.random.rand(m, 1) - 1
# y = (0.2 + 0.1 * X + 0.5 * X**2 + np.random.randn(m, 1)/10).ravel()
y = (0.2 + 0.1 * X + 0.5 * X**2 + 0.1 * X**3 + np.random.randn(m, 1) / 10).ravel()

epsilons = [0.1, 0.05]
eps_names = ["0p1", "0p05"]
for i, eps in enumerate(epsilons):
    # svm_poly_reg1 = SVR(kernel="poly", degree=5, C=1e3, epsilon=eps, gamma="scale")
    # svm_poly_reg2 = SVR(kernel="poly", degree=5, C=1e-3, epsilon=eps, gamma="scale")
    svm_reg1 = SVR(kernel="rbf", gamma=1, C=100, epsilon=eps)
    svm_reg2 = SVR(kernel="rbf", gamma=1, C=0.01, epsilon=eps)

    svm_reg1.fit(X, y)
    svm_reg2.fit(X, y)

    fig, axes = plt.subplots(ncols=2, figsize=(9, 4), sharey=True)
    plt.sca(axes[0])
    plot_svm_regression(svm_reg1, X, y, [-1, 1, 0, 1])
    plt.title(r"$C={}, \epsilon = {}$".format(svm_reg1.C, svm_reg1.epsilon), fontsize=18)
    plt.ylabel(r"$y$", fontsize=18, rotation=0)
    plt.sca(axes[1])
    plot_svm_regression(svm_reg2, X, y, [-1, 1, 0, 1])
    plt.title(r"$C={}, \epsilon = {}$".format(svm_reg2.C, svm_reg2.epsilon), fontsize=18)
    fname = "figures/svm_regression_e{}.pdf".format(eps_names[i])
    plt.savefig(fname, dpi=300)
    plt.show()
------------------

---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
/tmp/ipykernel_4005/3233475220.py in <module>
     58     plt.title(r"$C={}, \epsilon = {}$".format(svm_reg2.C, svm_reg2.epsilon), fontsize=18)
     59     fname = "figures/svm_regression_e{}.pdf".format(eps_names[i])
---> 60     plt.savefig(fname, dpi=300)
     61     plt.show()

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/pyplot.py in savefig(*args, **kwargs)
    977 def savefig(*args, **kwargs):
    978     fig = gcf()
--> 979     res = fig.savefig(*args, **kwargs)
    980     fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors
    981     return res

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/figure.py in savefig(self, fname, transparent, **kwargs)
   3044                         ax.patch._cm_set(facecolor='none', edgecolor='none'))
   3045 
-> 3046             self.canvas.print_figure(fname, **kwargs)
   3047 
   3048     def ginput(self, n=1, timeout=30, show_clicks=True,

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)
   2323                         orientation=orientation,
   2324                         bbox_inches_restore=_bbox_inches_restore,
-> 2325                         **kwargs)
   2326             finally:
   2327                 if bbox_inches and restore_bbox:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in wrapper(*args, **kwargs)
   1646             kwargs.pop(arg)
   1647 
-> 1648         return func(*args, **kwargs)
   1649 
   1650     return wrapper

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/_api/deprecation.py in wrapper(*inner_args, **inner_kwargs)
    387             # Early return in the simple, non-deprecated case (much faster than
    388             # calling bind()).
--> 389             return func(*inner_args, **inner_kwargs)
    390         arguments = signature.bind(*inner_args, **inner_kwargs).arguments
    391         if is_varargs and arguments.get(name):

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in print_pdf(self, filename, dpi, bbox_inches_restore, metadata)
   2781             file = filename._file
   2782         else:
-> 2783             file = PdfFile(filename, metadata=metadata)
   2784         try:
   2785             file.newPage(width, height)

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in __init__(self, filename, metadata)
    652         self.original_file_like = None
    653         self.tell_base = 0
--> 654         fh, opened = cbook.to_filehandle(filename, "wb", return_opened=True)
    655         if not opened:
    656             try:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/cbook/__init__.py in to_filehandle(fname, flag, return_opened, encoding)
    449             fh = bz2.BZ2File(fname, flag)
    450         else:
--> 451             fh = open(fname, flag, encoding=encoding)
    452         opened = True
    453     elif hasattr(fname, 'seek'):

FileNotFoundError: [Errno 2] No such file or directory: 'figures/svm_regression_e0p1.pdf'
FileNotFoundError: [Errno 2] No such file or directory: 'figures/svm_regression_e0p1.pdf'
