An error occurred while executing the following cell:
------------------
# Figure 11.12 (b)
# Plot the full L1 regularization path for the prostate data set


from scipy.io import loadmat

try:
    from sklearn import linear_model
except ModuleNotFoundError:
    %pip install -qq scikit-learn
    from sklearn import linear_model
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import requests
from io import BytesIO

try:
    import probml_utils as pml
except ModuleNotFoundError:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    import probml_utils as pml

# Load prostate cancer data
url = "https://github.com/probml/probml-data/blob/main/data/prostate/prostateStnd.mat?raw=true"
response = requests.get(url)
rawdata = BytesIO(response.content)
data = loadmat(rawdata)

names = list(map(lambda x: x[0], data["names"][0]))
X, y = data["X"], data["y"]

# Finding coefficients for lasso path

_, _, coefs = linear_model.lars_path(X, y.flatten(), method="lasso")

tau = np.sum(np.abs(coefs.T), axis=1)

# Figure 11.12 (b)
# Profile of lasso coeficients for prostate cancer example

fig, ax = plt.subplots()
xs = tau
ys = coefs.T
plt.xlabel(r"$\tau$")
ax.xaxis.set_major_locator(ticker.MultipleLocator(0.5))
plt.plot(xs, ys, marker="o")
plt.legend(names)
pml.savefig("L1.pdf")
plt.show()
------------------

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
/tmp/ipykernel_8542/1805470897.py in <module>
     26 response = requests.get(url)
     27 rawdata = BytesIO(response.content)
---> 28 data = loadmat(rawdata)
     29 
     30 names = list(map(lambda x: x[0], data["names"][0]))

~/miniconda3/envs/py37/lib/python3.7/site-packages/scipy/io/matlab/mio.py in loadmat(file_name, mdict, appendmat, **kwargs)
    223     variable_names = kwargs.pop('variable_names', None)
    224     with _open_file_context(file_name, appendmat) as f:
--> 225         MR, _ = mat_reader_factory(f, **kwargs)
    226         matfile_dict = MR.get_variables(variable_names)
    227 

~/miniconda3/envs/py37/lib/python3.7/site-packages/scipy/io/matlab/mio.py in mat_reader_factory(file_name, appendmat, **kwargs)
     72     """
     73     byte_stream, file_opened = _open_file(file_name, appendmat)
---> 74     mjv, mnv = get_matfile_version(byte_stream)
     75     if mjv == 0:
     76         return MatFile4Reader(byte_stream, **kwargs), file_opened

~/miniconda3/envs/py37/lib/python3.7/site-packages/scipy/io/matlab/miobase.py in get_matfile_version(fileobj)
    229     if maj_val in (1, 2):
    230         return ret
--> 231     raise ValueError('Unknown mat file type, version %s, %s' % ret)
    232 
    233 

ValueError: Unknown mat file type, version 116, 101
ValueError: Unknown mat file type, version 116, 101
