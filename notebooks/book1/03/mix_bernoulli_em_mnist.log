An error occurred while executing the following cell:
------------------
"""
Fits Bernoulli mixture model for mnist digits using em algorithm
Author: Meduri Venkata Shivaditya, Aleyna Kara(@karalleyna)
"""


from jax.random import PRNGKey, randint

try:
    import tensorflow as tf
except ModuleNotFoundError:
    %pip install -qq tensorflow
    import tensorflow as tf
try:
    from probml_utils.mix_bernoulli_lib import BMM
except ModuleNotFoundError:
    %pip install -qq git+https://github.com/probml/probml-utils.git
    from probml_utils.mix_bernoulli_lib import BMM

from probml_utils.mix_bernoulli_em_mnist import mnist_data


def main():
    n_obs = 1000
    observations = mnist_data(n_obs)  # subsample the MNIST dataset
    n_vars = len(observations[0])
    K, num_of_iters = 12, 10
    n_row, n_col = 3, 4
    bmm = BMM(K, n_vars)
    _ = bmm.fit_em(observations, num_of_iters=num_of_iters)
    bmm.plot(n_row, n_col, "bmm_em_mnist")


if __name__ == "__main__":
    main()
------------------

---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
/tmp/ipykernel_4570/205051138.py in <module>
     13     import tensorflow as tf
     14 try:
---> 15     from probml_utils.mix_bernoulli_lib import BMM
     16 except ModuleNotFoundError:
     17     get_ipython().run_line_magic('pip', 'install -qq git+https://github.com/probml/probml-utils.git')

~/miniconda3/envs/py37/lib/python3.7/site-packages/probml_utils/mix_bernoulli_lib.py in <module>
     10 from jax.experimental import optimizers
     11 
---> 12 import distrax
     13 from distrax._src.utils import jittable
     14 

~/miniconda3/envs/py37/lib/python3.7/site-packages/distrax/__init__.py in <module>
     16 
     17 # Bijectors.
---> 18 from distrax._src.bijectors.bijector import Bijector
     19 from distrax._src.bijectors.bijector import BijectorLike
     20 from distrax._src.bijectors.block import Block

~/miniconda3/envs/py37/lib/python3.7/site-packages/distrax/_src/bijectors/bijector.py in <module>
     21 from distrax._src.utils import jittable
     22 import jax.numpy as jnp
---> 23 from tensorflow_probability.substrates import jax as tfp
     24 
     25 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/__init__.py in <module>
     18 # `python/__init__.py` as necessary.
     19 
---> 20 from tensorflow_probability import substrates
     21 # from tensorflow_probability.google import staging  # DisableOnExport
     22 # from tensorflow_probability.google import tfp_google  # DisableOnExport

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/substrates/__init__.py in <module>
     15 """TensorFlow Probability alternative substrates."""
     16 
---> 17 from tensorflow_probability.python.internal import all_util
     18 from tensorflow_probability.python.internal import lazy_loader  # pylint: disable=g-direct-tensorflow-import
     19 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/__init__.py in <module>
    136   # Non-lazy load of packages that register with tensorflow or keras.
    137   for pkg_name in _maybe_nonlazy_load:
--> 138     dir(globals()[pkg_name])  # Forces loading the package from its lazy loader.
    139 
    140 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/lazy_loader.py in __dir__(self)
     55 
     56   def __dir__(self):
---> 57     module = self._load()
     58     return dir(module)
     59 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/lazy_loader.py in _load(self)
     35     """Load the module and insert it into the parent's globals."""
     36     if callable(self._on_first_access):
---> 37       self._on_first_access()
     38       self._on_first_access = None
     39     # Import the target module and insert it into the parent's namespace

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/__init__.py in _validate_tf_environment(package)
     62         'Please upgrade TensorFlow to proceed.'.format(
     63             required=required_tensorflow_version,
---> 64             present=tf.__version__))
     65 
     66   if (package == 'mcmc' and

ImportError: This version of TensorFlow Probability requires TensorFlow version >= 2.9; Detected an installation of version 2.8.0. Please upgrade TensorFlow to proceed.
ImportError: This version of TensorFlow Probability requires TensorFlow version >= 2.9; Detected an installation of version 2.8.0. Please upgrade TensorFlow to proceed.
